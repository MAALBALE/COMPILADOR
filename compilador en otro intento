import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class AnalizadorLexico {

    private ArrayList<Token> tokens;
    private Map<String, Integer> tablaSimbolos;

    public AnalizadorLexico() {
        this.tokens = new ArrayList<Token>();
        this.tablaSimbolos = new HashMap<String, Integer>();
    }

    public void analizar(String codigo) {
        String[] lineas = codigo.split("\n");
        for (int i = 0; i < lineas.length; i++) {
            String linea = lineas[i].trim();
            if (!linea.isEmpty()) {
                String[] palabras = linea.split("\\s+");
                for (int j = 0; j < palabras.length; j++) {
                    String palabra = palabras[j].trim();
                    if (!palabra.isEmpty()) {
                        if (esPalabraReservada(palabra)) {
                            tokens.add(new Token(palabra, "PALABRA_RESERVADA", i+1, j+1));
                        } else if (esOperador(palabra)) {
                            tokens.add(new Token(palabra, "OPERADOR", i+1, j+1));
                        } else if (esIdentificador(palabra)) {
                            tokens.add(new Token(palabra, "IDENTIFICADOR", i+1, j+1));
                            if (!tablaSimbolos.containsKey(palabra)) {
                                tablaSimbolos.put(palabra, 1);
                            } else {
                                int contador = tablaSimbolos.get(palabra);
                                tablaSimbolos.put(palabra, contador+1);
                            }
                        } else if (esNumero(palabra)) {
                            tokens.add(new Token(palabra, "NUMERO", i+1, j+1));
                        } else {
                            tokens.add(new Token(palabra, "ERROR", i+1, j+1));
                        }
                    }
                }
            }
        }
    }

    private boolean esPalabraReservada(String palabra) {
        String[] palabrasReservadas = {"public", "private", "class", "static", "void", "int", "double", "boolean", "if", "else", "while", "for"};
        for (int i = 0; i < palabrasReservadas.length; i++) {
            if (palabrasReservadas[i].equals(palabra)) {
                return true;
            }
        }
        return false;
    }

    private boolean esOperador(String palabra) {
        String[] operadores = {"+", "-", "*", "/", "=", "<", ">", "<=", ">="};
        for (int i = 0; i < operadores.length; i++) {
            if (operadores[i].equals(palabra)) {
                return true;
            }
        }
        return false;
    }

    private boolean esIdentificador(String palabra) {
        return palabra.matches("[a-zA-Z]+\\w*");
    }

    private boolean esNumero(String palabra) {
        return palabra.matches("\\d+(\\.\\d+)?");
    }

    public ArrayList<Token> getTokens() {
        return tokens;
    }

    public Map<String, Integer> getTablaSimbolos() {
        return tablaSimbolos;
    }

}
